以下は **安定版リリースに向けた “UI 再整理” の実装計画（Codex 用）** です。
現状の UI は 1 ウィンドウ内にチェックボックス＋CollapsingHeader で機能を並べ、スナップショット表は `Name / Rank / ETA(min) / Route` の4列のみを表示しています（JSON の `Extra` で生成済みの `EtaLocal` / `RemainingText` / `RouteShort` は未表示）。設定ウィンドウの起動は `UiBuilder.OpenConfigUi` のみを購読しており、**v9 から追加された `OpenMainUi`** は未購読です（→プラグインインストーラの「Open Main UI」ボタンから開けるように対応推奨）。これらは `Plugin.UI.cs` と `Plugin.cs` の現行実装から確認できます。&#x20;
※ `EtaFormatter` は `EtaLocal / RemainingText / RouteShort` を組み立て済み（“残 / 分 / 時間” を UTF-8 で安定出力）。この前提を表に反映します。

外部仕様の根拠：

* Dalamud v9 の **`UiBuilder.OpenMainUi`**（メイン UI 起動イベント）。([Dalamud][1])
* ImGui の **TabBar / TabItem** と **Tables**（実装例は demo ソース）。([Skia][2])
* Notion Date の **`time_zone` は IANA/TZ で、指定時は `start` に UTC オフセットを含めない**。([Notion Developers][3])
* Discord Webhook の **429 / Retry-After** 後追い（現実装も準拠）。([Discord][4])

---

## 📦 出力物（ファイル）

* `TASKS/NEXT_UI_PLAN_STABLE.md`（この計画書）
* 変更対象:
  `apps/XIVSubmarinesReturn/src/Plugin.UI.cs`（UI 再構成） /
  `apps/XIVSubmarinesReturn/src/Plugin.cs`（OpenMainUi 対応・重複文の整理） /
  `apps/XIVSubmarinesReturn/src/Configuration.cs`（UI 設定の永続化：自動リフレッシュ等） /
  `apps/XIVSubmarinesReturn/src/Services/NotionClient.cs`（テスト送信用の薄い公開 API 追加）
  最新の変更対象一覧とビルド手順は付属メモに準じます。

---

## ✅ ゴール（DoD）

1. メインウィンドウが **タブ構成**（Overview / Capture / Alarm / Discord / Notion / Advanced / Debug）。
2. **Overview 表**が `Slot / Name / Rank / ETA(Local) / Remaining / Route(Short)` を表示し、差分強調は現行 `IsChanged` を踏襲。
3. ウィンドウ上部に **Identity バッジ**（Character / World / FC）＋ **操作列（Refresh・Auto Refresh）**。
4. Dalamud v9 の **OpenMainUi** でも UI を開ける。([Dalamud][1])
5. 「Test Notion」「Test Discord」が **即時 1 件送信**できる（スケジューラ経由ではなく直送）
   ※ Notion は既存 Upsert の流れ・JST `time_zone` 方針を踏襲。 ([Notion Developers][3])
6. 既存の **Google Calendar セクションはビルドフラグで非表示**（現行維持）。

---

## 🛠️ 実装計画（Codex 実行用）

> **手順:** 下記ブロックを順に `codex exec` してください。
> 可能な箇所は差分パッチを含めています（言語は C# / ImGui）。

### 1) メイン UI をタブ化（Overview/…）

```bash
codex exec --full-auto "
Edit apps/XIVSubmarinesReturn/src/Plugin.UI.cs:
- DrawUI() 内の CollapsingHeader 群を TabBar 構成に移行:
  ImGui.BeginTabBar(\"xsr_tabs\"); 
   - Overview: 既存の Snapshot テーブル＋上部ヘッダ（後述）を配置
   - Capture: 'Learn names from UI' / 'Capture (UI)' / 'Capture (Memory)' / 'Probe addons' / 'Open folder'
   - Alarm: 現行 Alarm 設定（Lead minutes 入力と保存）
   - Discord: 現行 Discord 設定 + 'Test Discord'
   - Notion: 現行 Notion 設定 + 'Test Notion'
   - Advanced: Route Names エディタ
   - Debug: Debug ログ/ Self-test / Trace
  ImGui.EndTabBar();
- 既存 CollapsingHeader は削除または各 Tab へ移動。
"
```

参考: ImGui の TabBar/TabItem は demo 実装の流れに準拠します。([Skia][2])
現状の UI 要素はすべて `Plugin.UI.cs` に集約済みです。

### 2) Overview 表の列を拡張（Extra 利用）

```bash
codex exec --patch apps/XIVSubmarinesReturn/src/Plugin.UI.cs <<'PATCH'
*** Begin Patch
*** Update File: apps/XIVSubmarinesReturn/src/Plugin.UI.cs
@@
-            if (ImGui.BeginTable("subs", 4, ImGuiTableFlags.Borders | ImGuiTableFlags.RowBg))
+            if (ImGui.BeginTable("subs", 6, ImGuiTableFlags.Borders | ImGuiTableFlags.RowBg))
             {
-                ImGui.TableSetupColumn("Name");
-                ImGui.TableSetupColumn("Rank");
-                ImGui.TableSetupColumn("ETA(min)");
-                ImGui.TableSetupColumn("Route");
+                ImGui.TableSetupColumn("Slot");
+                ImGui.TableSetupColumn("Name");
+                ImGui.TableSetupColumn("Rank");
+                ImGui.TableSetupColumn("ETA(Local)");
+                ImGui.TableSetupColumn("Remaining");
+                ImGui.TableSetupColumn("Route");
                 ImGui.TableHeadersRow();
 
                 foreach (var it in _uiSnapshot.Items)
                 {
                     bool changed = IsChanged(it);
                     ImGui.TableNextRow();
-                    ImGui.TableSetColumnIndex(0);
-                    if (changed) { ImGui.Text($"* {it.Name}"); }
-                    else ImGui.Text(it.Name ?? string.Empty);
-                    ImGui.TableSetColumnIndex(1);
-                    ImGui.Text(it.Rank?.ToString() ?? "");
-                    ImGui.TableSetColumnIndex(2);
-                    ImGui.Text(it.DurationMinutes?.ToString() ?? "");
-                    ImGui.TableSetColumnIndex(3);
-                    ImGui.Text(it.RouteKey ?? "");
+                    ImGui.TableSetColumnIndex(0);
+                    ImGui.Text(it.Slot?.ToString() ?? "");
+                    ImGui.TableSetColumnIndex(1);
+                    ImGui.Text(changed ? $"* {it.Name}" : (it.Name ?? string.Empty));
+                    ImGui.TableSetColumnIndex(2);
+                    ImGui.Text(it.Rank?.ToString() ?? "");
+                    ImGui.TableSetColumnIndex(3);
+                    var etaLocal = it.Extra != null && it.Extra.TryGetValue("EtaLocal", out var t) ? t : "";
+                    ImGui.Text(etaLocal);
+                    ImGui.TableSetColumnIndex(4);
+                    var remain = it.Extra != null && it.Extra.TryGetValue("RemainingText", out var r) ? r : "";
+                    ImGui.Text(remain);
+                    ImGui.TableSetColumnIndex(5);
+                    var route = it.Extra != null && it.Extra.TryGetValue("RouteShort", out var rs) ? rs : (it.RouteKey ?? "");
+                    ImGui.Text(route);
                 }
 
                 ImGui.EndTable();
             }
*** End Patch
PATCH
```

上記は `EtaFormatter` が付与する `Extra["EtaLocal"/"RemainingText"/"RouteShort"]` を利用します。

### 3) ヘッダ（Identity & 操作列）＋自動リフレッシュ

```bash
codex exec --full-auto "
Edit apps/XIVSubmarinesReturn/src/Configuration.cs:
- Add bool UiAutoRefresh = true; int UiRefreshSeconds = 5; を追加して Save 対象にする.

Edit apps/XIVSubmarinesReturn/src/Plugin.UI.cs:
- DrawUI() 冒頭に Identity バッジを表示:
  （_uiSnapshot?.Character / World / FreeCompany を1行表示）
- 'Refresh' ボタン右に 'Auto refresh' チェック + 秒数入力(1..30) を配置し、
  DrawSnapshotTable() の 5秒 固定を Config.UiRefreshSeconds に置換、
  Auto ON のときは 'Refresh' 押下不要で周期再読込。
"
```

Identity は現行 `TrySetIdentity()` で埋め込まれます（Snapshot.Character / World / FreeCompany）。

### 4) `OpenMainUi` を購読（Installer から開けるように）

```bash
codex exec --patch apps/XIVSubmarinesReturn/src/Plugin.UI.cs <<'PATCH'
*** Begin Patch
*** Update File: apps/XIVSubmarinesReturn/src/Plugin.UI.cs
@@
     private void InitUI()
     {
         try
         {
             _pi.UiBuilder.Draw += DrawUI;
-            _pi.UiBuilder.OpenConfigUi += () => _showUI = true;
+            _pi.UiBuilder.OpenConfigUi += () => _showUI = true;
+            _pi.UiBuilder.OpenMainUi  += () => _showUI = true;
         }
         catch { }
     }
*** End Patch
PATCH
```

Dalamud v9 で `OpenMainUi` が追加されています。([Dalamud][1])

### 5) 「Test Notion」を直送に変更（1件 Upsert）

```bash
codex exec --full-auto "
Edit apps/XIVSubmarinesReturn/src/Services/NotionClient.cs:
- public Task UpsertNearestAsync(SubmarineSnapshot snap, CancellationToken ct=default)
  を INotionClient に追加し、内部で 'nearest 1件' に絞って UpsertSnapshotAsync と同等処理。

Edit apps/XIVSubmarinesReturn/src/Plugin.UI.cs:
- Notion タブの 'Test Notion' ボタン: 
  _notion?.UpsertNearestAsync(snap).GetAwaiter().GetResult(); に差し替え
  （現状は AlarmScheduler 経由で enqueue しているため、テストのフィードバックが遅い）
"
```

Notion 側の方針（JST `time_zone` を指定、`start` に UTC オフセットを含めない）は現行実装のまま維持します。 ([Notion Developers][3])

### 6) 「Test Discord」の文面を Overview と合わせる

```bash
codex exec --full-auto "
Edit apps/XIVSubmarinesReturn/src/Plugin.UI.cs:
- 'Test Discord' のサンプル Snapshot を、Extra を含めて Enrich 済みの1件に統一。
- 既定は embeds を用い、description は 'Earliest only (ETA min)' を現行と揃える。
"
```

Webhook のリトライは `Retry-After` に従う現行実装で問題ありません。 ([Discord][4])

### 7) 重複メッセージの整理（小修正）

```bash
codex exec --patch apps/XIVSubmarinesReturn/src/Plugin.cs <<'PATCH'
*** Begin Patch
*** Update File: apps/XIVSubmarinesReturn/src/Plugin.cs
@@
-            _chat.Print("[Submarines] 設定ウィンドウを開きました。");
-            _chat.Print("[Submarines] 設定ウィンドウを開きました。");
+            _chat.Print("[Submarines] 設定ウィンドウを開きました。");
@@
-            _chat.Print("[Submarines] メモリからの取得に失敗しました。工房に入ってから再試行してください。");
-            _chat.Print("[Submarines] メモリからの取得に失敗しました。工房に移動して再実行してください。");
+            _chat.Print("[Submarines] メモリからの取得に失敗しました。工房に入ってから再試行してください。");
@@
-            _chat.Print("[Submarines] 選択UI(SelectString) を開いた状態で実行してください。");
-            _chat.Print("[Submarines] SelectString を開いた状態で実行してください。");
+            _chat.Print("[Submarines] SelectString を開いた状態で実行してください。");
*** End Patch
PATCH
```

（重複出力は現行ソースに点在。上記は代表例です。）

### 8) 表の操作性（列幅 / ツールチップ）

```bash
codex exec --full-auto "
Edit apps/XIVSubmarinesReturn/src/Plugin.UI.cs:
- Overview 表の Route セルにホバー時ツールチップで 'RouteKey' をフル表示。
- Name 列は '*' 強調のまま、ImGui.TextWrapped を使わず通常表示を維持。
- 将来のレイアウト調整用に ImGuiTableFlags.SizingStretchProp を付与（必要なら）。
"
```

（Tab 周りは demo の実装順に則って呼び出します。）([Skia][2])

---

## 🧪 手動確認（抜粋）

* **Open Main UI** ボタンからメイン UI が開く（Installer / Plugin 設定画面）。([Dalamud][5])
* **Overview 表**に `ETA(Local)/Remaining/Route(Short)` が表示される（`/xsr dump` 後に確認）。
* **Test Notion** が 1 アイテムを即時 Upsert（JST 表示）。 ([Notion Developers][3])
* **Test Discord** が 1 投稿（embed or text）で送信、429 が出ても自動リトライ。 ([Discord][4])
* **GCAL セクション非表示**は現行維持（`#if XSR_FEAT_GCAL`）。

---

## ℹ️ 備考（現行コード前提）

* Notion/Discord/Alarm の土台は既に実装済みです（変更ファイル一覧・ガイド参照）。
* `EtaFormatter` は UTF-8 の “時間/分” で `RemainingText` を生成（UI はそのまま表示）。
* Webhook の 429 は `Retry-After` を見て 1 回リトライが入っています（実装踏襲）。 ([Discord][4])

---

### （任意）小さな非 UI 改善（別チケット推奨）

* **Alarm Trigger の同一分判定**（`mins == lead` だと取りこぼしの恐れ。前回値保持で交差検出へ）。現行実装の位置：`AlarmScheduler.Tick`。

---

以上の手順で、**UI をタブで整理**し、**Overview に人間が読みやすい ETA/残り/短縮ルート**を反映、**OpenMainUi 対応**まで含めて安定リリースに適した形に整えます。必要であれば、この計画ブロックをそのまま Codex に投入して進めてください。

[1]: https://dalamud.dev/api/Dalamud.Interface/Interfaces/IUiBuilder/?utm_source=chatgpt.com "Interface IUiBuilder"
[2]: https://skia.googlesource.com/external/github.com/ocornut/imgui/%2B/refs/tags/v1.78/imgui_demo.cpp?utm_source=chatgpt.com "imgui_demo.cpp - external/github.com/ocornut/imgui - Git ..."
[3]: https://developers.notion.com/changelog/time-zone-support?utm_source=chatgpt.com "Time zone support"
[4]: https://discord.com/developers/docs/topics/rate-limits?utm_source=chatgpt.com "Rate Limits | Documentation | Discord Developer Portal"
[5]: https://dalamud.dev/versions/v9/?utm_source=chatgpt.com "What's New in Dalamud v9"
